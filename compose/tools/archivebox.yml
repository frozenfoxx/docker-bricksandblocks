# Usage:
#     mkdir -p ~/archivebox/data && cd ~/archivebox
#     curl -fsSL 'https://docker-compose.archivebox.io' > docker-compose.yml
#     docker compose run archivebox version
#     docker compose run archivebox config --set SAVE_ARCHIVE_DOT_ORG=False
#     docker compose run archivebox add --depth=1 'https://news.ycombinator.com'
#     docker compose run -T archivebox add < bookmarks.txt
#     docker compose up -d && open 'https://localhost:8000'
#     docker compose run archivebox help
# Documentation:
#     https://github.com/ArchiveBox/ArchiveBox/wiki/Docker#docker-compose

services:
    archivebox:
      image: archivebox/archivebox:latest
      container_name: archivebox
      user: "1028:50" # 'staff' user/group
      environment:
          - ALLOWED_HOSTS=*                   # set this to the hostname(s) you're going to serve the site from!
          - CSRF_TRUSTED_ORIGINS=https://archivebox.${NETWORK_DOMAIN-bricksandblocks.net} # you MUST set this to the server's URL for admin login and the REST API to work
          - PUBLIC_INDEX=False                # set to False to prevent anonymous users from viewing snapshot list
          - PUBLIC_SNAPSHOTS=False            # set to False to prevent anonymous users from viewing snapshot content
          - PUBLIC_ADD_VIEW=False             # set to True to allow anonymous users to submit new URLs to archive
          - PUID=1028                         # 'staff' user
          - PGID=50                           # 'staff' group
          - SEARCH_BACKEND_ENGINE=sonic       # tells ArchiveBox to use sonic container below for fast full-text search
          - SEARCH_BACKEND_HOST_NAME=sonic
          - SEARCH_BACKEND_PASSWORD=${ARCHIVEBOX_BACKEND_PASSWORD-SomeSecretPassword}
          - TZ=America/Los_Angeles
          # For options below, it's better to set in data/ArchiveBox.conf or use `docker compose run archivebox config --set SOME_KEY=someval` instead of setting here:
          # - MEDIA_MAX_SIZE=750m             # increase this filesize limit to allow archiving larger audio/video files
          # - TIMEOUT=60                      # increase this number to 120+ seconds if you see many slow downloads timing out
          # - CHECK_SSL_VALIDITY=True         # set to False to disable strict SSL checking (allows saving URLs w/ broken certs)
          # - SAVE_ARCHIVE_DOT_ORG=True       # set to False to disable submitting all URLs to Archive.org when archiving
          # - USER_AGENT="..."                # set a custom USER_AGENT to avoid being blocked as a bot
          # ...
          # For more info, see: https://github.com/ArchiveBox/ArchiveBox/wiki/Docker#configuration
      ports:
          - 18001:8000
      volumes:
          - ${LOCAL_PREFIX-/local}/archivebox/data:/data
          # ./data/personas/Default/chrome_profile/Default:/data/personas/Default/chrome_profile/Default
      extends:
        file: ${ROOT_DIR-../..}/lib/logging.yml
        service: logging-loki

    ######## Optional Addons: tweak examples below as needed for your specific use case ########

    ### This optional container runs scheduled jobs in the background (and retries failed ones). To add a new job:
    #   $ docker compose run archivebox schedule --add --every=day --depth=1 'https://example.com/some/rss/feed.xml'
    # then restart the scheduler container to apply any changes to the scheduled task list:
    #   $ docker compose restart archivebox_scheduler
    # https://github.com/ArchiveBox/ArchiveBox/wiki/Scheduled-Archiving

    scheduler:
      image: archivebox/archivebox:latest
      container_name: archivebox_scheduler
      command: schedule --foreground --update --every=day
      environment:
          - PUID=1028                         # 'staff' user
          - PGID=50                           # 'staff' group
          - TIMEOUT=120                       # use a higher timeout than the main container to give slow tasks more time when retrying
          - SEARCH_BACKEND_ENGINE=sonic       # tells ArchiveBox to use sonic container below for fast full-text search
          - SEARCH_BACKEND_HOST_NAME=sonic
          - SEARCH_BACKEND_PASSWORD=${ARCHIVEBOX_BACKEND_PASSWORD-SomeSecretPassword}
          # For other config it's better to set using `docker compose run archivebox config --set SOME_KEY=someval` instead of setting here
          # ...
          # For more info, see: https://github.com/ArchiveBox/ArchiveBox/wiki/Docker#configuration
      volumes:
          - ${LOCAL_PREFIX-/local}/archivebox/data:/data
      extends:
        file: ${ROOT_DIR-../..}/lib/logging.yml
        service: logging-loki
      # cpus: 2                               # uncomment / edit these values to limit scheduler container resource consumption
      # mem_limit: 2048m
      # restart: always


    ### This runs the optional Sonic full-text search backend (much faster than default rg backend).
    # If Sonic is ever started after not running for a while, update its full-text index by running:
    #   $ docker-compose run archivebox update --index-only
    # https://github.com/ArchiveBox/ArchiveBox/wiki/Setting-up-Search

    sonic:
      image: archivebox/sonic:latest
      container_name: archivebox_sonic
      expose:
          - 1491
      environment:
          - SEARCH_BACKEND_PASSWORD=${ARCHIVEBOX_BACKEND_PASSWORD-SomeSecretPassword}
      volumes:
          #- ./sonic.cfg:/etc/sonic.cfg:ro    # mount to customize: https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/stable/etc/sonic.cfg
          - ${LOCAL_PREFIX-/local}/archivebox/data/sonic:/data
      extends:
        file: ${ROOT_DIR-../..}/lib/logging.yml
        service: logging-loki


    ### This optional container runs xvfb+noVNC so you can watch the ArchiveBox browser as it archives things,
    # or remote control it to set up a chrome profile w/ login credentials for sites you want to archive.
    # https://github.com/ArchiveBox/ArchiveBox/wiki/Chromium-Install#setting-up-a-chromium-user-profile
    # https://github.com/ArchiveBox/ArchiveBox/wiki/Chromium-Install#docker-vnc-setup

    novnc:
      image: theasp/novnc:latest
      container_name: archivebox_novnc
      environment:
          - DISPLAY_WIDTH=1920
          - DISPLAY_HEIGHT=1080
          - RUN_XTERM=no
      ports:
          # to view/control ArchiveBox's browser, visit: http://127.0.0.1:8080/vnc.html
          # restricted to access from localhost by default because it has no authentication
          - 127.0.0.1:9880:8080
      extends:
        file: ${ROOT_DIR-../..}/lib/logging.yml
        service: logging-loki

    ### Example: Run ChangeDetection.io to watch for changes to websites, then trigger ArchiveBox to archive them
    # Documentation: https://github.com/dgtlmoon/changedetection.io
    # More info: https://github.com/dgtlmoon/changedetection.io/blob/master/docker-compose.yml

    # changedetection:
    #     image: ghcr.io/dgtlmoon/changedetection.io
    #     volumes:
    #         - ./data-changedetection:/datastore


# HOW TO: Set up cloud storage for your ./data/archive (e.g. Amazon S3, Backblaze B2, Google Drive, OneDrive, SFTP, etc.)
#   https://github.com/ArchiveBox/ArchiveBox/wiki/Setting-Up-Storage
#
#   Follow the steps here to set up the Docker RClone Plugin https://rclone.org/docker/
#     $ docker plugin install rclone/docker-volume-rclone:amd64 --grant-all-permissions --alias rclone
#     $ nano /var/lib/docker-plugins/rclone/config/rclone.conf
#     [examplegdrive]
#     type = drive
#     scope = drive
#     drive_id = 1234567...
#     root_folder_id = 0Abcd...
#     token = {"access_token":...}

#volumes:
  # archivebox-data:
  #   driver: local
  #   driver_opts:
  #     type: nfs
  #     o: "addr=${DATA_HOST},nolock,soft,rw"
  #     device: ":/volume1/Docker/archivebox/data"

  # sonic-data:
  #   driver: local
  #   driver_opts:
  #     type: nfs
  #     o: "addr=${DATA_HOST},nolock,soft,rw"
  #     device: ":/volume1/Docker/archivebox/data/sonic"

    # archive:
    #     driver: rclone
    #     driver_opts:
    #         remote: 'examplegdrive:archivebox'
    #         allow_other: 'true'
    #         vfs_cache_mode: full
    #         poll_interval: 0