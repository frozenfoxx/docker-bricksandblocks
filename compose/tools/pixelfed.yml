---
services:
  pixelfed-web:
    image: ghcr.io/pixelfed-glitch/pixelfed:latest
    container_name: pixelfed-web
    restart: unless-stopped
    environment:
      APP_KEY: "${PIXELFED_APP_KEY}"
      DB_PASSWORD: "${PIXELFED_DATABASE_PASSWD}"
      DB_USERNAME: "${PIXELFED_DATABASE_USER}"
      DOCKER_SERVICE_NAME: "pixelfed-web"
      ENTRYPOINT_SKIP_SCRIPTS: ${ENTRYPOINT_SKIP_SCRIPTS:-}
    volumes:
      - pixelfed-cache:/var/www/bootstrap/cache
      - pixelfed-data:/var/www/storage
      - "./.env.pixelfed:/var/www/.env"
    ports:
      - "8282:80"
    extends:
      file: ${ROOT_DIR-../..}/lib/logging.yml
      service: logging-loki
    depends_on:
      - pixelfed-postgres
      - pixelfed-redis
    healthcheck:
      test: 'curl --fail http://localhost/api/service/health-check'
      interval: 10s
      timeout: 5s
      retries: 2

  pixelfed-worker:
    image: ghcr.io/pixelfed-glitch/pixelfed:fpm-latest
    container_name: pixelfed-worker
    command: gosu www-data php artisan horizon
    restart: unless-stopped
    environment:
      APP_KEY: "${PIXELFED_APP_KEY}"
      DB_PASSWORD: "${PIXELFED_DATABASE_PASSWD}"
      DB_USERNAME: "${PIXELFED_DATABASE_USER}"
      DOCKER_SERVICE_NAME: "pixelfed-worker"
      ENTRYPOINT_SKIP_SCRIPTS: any
    volumes:
      - pixelfed-cache:/var/www/bootstrap/cache
      - pixelfed-data:/var/www/storage
      - "./.env.pixelfed:/var/www/.env"
    extends:
      file: ${ROOT_DIR-../..}/lib/logging.yml
      service: logging-loki
    depends_on:
      - pixelfed-postgres
      - pixelfed-redis
    healthcheck:
      test: gosu www-data php artisan horizon:status | grep running
      interval: 10s
      timeout: 5s
      retries: 2

  pixelfed-cron:
    image: ghcr.io/pixelfed-glitch/pixelfed:fpm-latest
    container_name: pixelfed-cron
    command: gosu www-data php artisan schedule:work -vvv
    restart: unless-stopped
    stop_signal: SIGTERM
    environment:
      APP_KEY: "${PIXELFED_APP_KEY}"
      DB_PASSWORD: "${PIXELFED_DATABASE_PASSWD}"
      DB_USERNAME: "${PIXELFED_DATABASE_USER}"
      DOCKER_SERVICE_NAME: "pixelfed-cron"
      ENTRYPOINT_SKIP_SCRIPTS: any
    volumes:
      - pixelfed-cache:/var/www/bootstrap/cache
      - pixelfed-data:/var/www/storage
      - "./.env.pixelfed:/var/www/.env"
    extends:
      file: ${ROOT_DIR-../..}/lib/logging.yml
      service: logging-loki
    depends_on:
      - pixelfed-postgres
      - pixelfed-redis
    healthcheck:
      test: ps aux | egrep 'php artisan [s]chedule:work -vvv'
      interval: 10s
      timeout: 5s
      retries: 2

## DB and Cache
  pixelfed-postgres:
    image: postgres:16-alpine
    container_name: pixelfed-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${PIXELFED_DATABASE_USER}
      POSTGRES_PASSWORD: ${PIXELFED_DATABASE_PASSWD}
      POSTGRES_DB: ${PIXELFED_DATABASE_NAME-pixelfed_prod}
      TZ: "Etc/UTC"
    volumes:
      - pixelfed-postgres-data:/var/lib/postgresql/data
    extends:
      file: ${ROOT_DIR-../..}/lib/logging.yml
      service: logging-loki
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 30s
      timeout: 20s
      retries: 3

  pixelfed-redis:
    image: redis:7.4-alpine
    container_name: pixelfed-redis
    #command: " --requirepass '${PIXELFED_REDIS_PASSWORD:-}'"
    restart: unless-stopped
    environment:
      TZ: "Etc/UTC"
    volumes:
      - pixelfed-redis-data:/data
    extends:
      file: ${ROOT_DIR-../..}/lib/logging.yml
      service: logging-loki
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 2

volumes:
  pixelfed-cache:
    driver: local
    driver_opts:
      type: nfs
      o: "addr=${DATA_HOST},nolock,soft,rw"
      device: ":/volume1/Docker/pixelfed-glitch/bootstrap/cache"

  pixelfed-data:
    driver: local
    driver_opts:
      type: nfs
      o: "addr=${DATA_HOST},nolock,soft,rw"
      device: ":/volume1/Docker/pixelfed-glitch/storage"

  pixelfed-postgres-data:
    driver: local
    driver_opts:
      type: nfs
      o: "addr=${DATA_HOST},nolock,soft,rw"
      device: ":/volume1/Docker/pixelfed-glitch/postgres"

  pixelfed-redis-data:
    driver: local
    driver_opts:
      type: nfs
      o: "addr=${DATA_HOST},nolock,soft,rw"
      device: ":/volume1/Docker/pixelfed-glitch/redis"