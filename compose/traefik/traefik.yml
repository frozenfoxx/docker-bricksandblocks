services:
  traefik:
    image: traefik:latest
    container_name: ${TRAEFIK_CONTAINERNAME-traefik}
    restart: always
    command:
      #- "--api.insecure=true"

      # Entrypoints
      - "--entrypoints.mqtt.address=:1883"
      - "--entrypoints.mqttsecure.address=:8883"
      #- "--entrypoints.mqttwebsocket.address=:9001"
      - "--entrypoints.ssh.address=:2022"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"

      # Certificate Resolvers
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.disablePropagationCheck=true"
      - "--certificatesresolvers.letsencrypt.acme.dnsChallenge.delayBeforeCheck=60"
      - "--certificatesResolvers.letsencrypt.acme.dnsChallenge.resolvers=1.1.1.1:53,8.8.8.8:53"
      - "--certificatesresolvers.letsencrypt.acme.email=${TRAEFIK_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/certs/acme.json"

      # Logging
      - "--log.level=${TRAEFIK_LOGLEVEL:-ERROR}" # Levels, DEBUG and ERROR

      # Providers
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/conf"
      - "--providers.file.watch=true"
      #- "--serverstransport.insecureskipverify=true"
    environment:
      - CF_API_EMAIL=${TRAEFIK_EMAIL}
      - CLOUDFLARE_DNS_API_TOKEN=${TRAEFIK_CLOUDFLARE_API_KEY}
      - CLOUDFLARE_ZONE_API_TOKEN=${TRAEFIK_CLOUDFLARE_API_KEY}
    ports:
      - "80:80"     # HTTP
      - "443:443"   # HTTPS
      - "1883:1883" # MQTT
      - "2022:2022" # SSH
      #- "8080:8080"
      - "8883:8883" # MQTT
      #- "9001:9001"
    labels:
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    volumes:
      - traefik-certs:/certs
      - traefik-conf:/conf
      - /var/run/docker.sock:/var/run/docker.sock
    extends:
      file: ${ROOT_DIR-../..}/lib/logging.yml
      service: logging-loki

volumes:
  traefik-certs:
    driver: local
    driver_opts:
      type: nfs
      o: "addr=${DATA_HOST},nolock,soft,rw"
      device: ":/volume1/Docker/traefik/certs"

  traefik-conf:
    driver: local
    driver_opts:
      type: nfs
      o: "addr=${DATA_HOST},nolock,soft,ro"
      device: ":/volume1/Docker/traefik/${TRAEFIK_CONF_MOUNTPOINT-conf}"