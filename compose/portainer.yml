services:
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: always
    ports:
      - "8000:8000"
      - "9000:9000"
      - "9443:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
      - portainer-data:/data
    labels:
      #- "traefik.enable=true"
      #- "traefik.http.routers.portainer.rule=Host(`portainer.${NETWORK_DOMAIN-bricksandblocks.net}`)"
      #- "traefik.http.routers.portainer.entrypoints=websecure"
      #- "traefik.http.routers.portainer.tls.certresolver=letsencrypt"
      #- "traefik.http.routers.portainer.service=portainer"
      #- "traefik.http.services.portainer.loadbalancer.server.port=9443"
      #- "traefik.http.services.portainer.loadbalancer.server.scheme=https"

      # Frontend
      #- "traefik.enable=true"
      #- "traefik.http.routers.frontend.rule=Host(`portainer.${NETWORK_DOMAIN-bricksandblocks.net}`)"
      #- "traefik.http.routers.frontend.entrypoints=websecure"
      #- "traefik.http.routers.frontend.service=frontend"
      #- "traefik.http.routers.frontend.tls.certresolver=letsencrypt"
      #- "traefik.http.routers.frontend.middlewares=internal-allowlist@file"
      #- "traefik.http.services.frontend.loadbalancer.server.port=9000"

      # Edge
      #- "traefik.http.routers.edge.rule=Host(`edge.${NETWORK_DOMAIN-bricksandblocks.net}`)"
      #- "traefik.http.routers.edge.entrypoints=websecure"
      #- "traefik.http.routers.edge.service=edge"
      #- "traefik.http.routers.edge.tls.certresolver=letsencrypt"
      #- "traefik.http.routers.edge.middlewares=internal-allowlist@file"
      #- "traefik.http.services.edge.loadbalancer.server.port=8000"

volumes:
  portainer-data:
    driver: local
    driver_opts:
      type: nfs
      o: "addr=${DATA_HOST},nolock,soft,rw"
      device: ":/volume1/Docker/portainer"