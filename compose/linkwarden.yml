---
services:
  linkwarden:
    image: ghcr.io/linkwarden/linkwarden:latest
    container_name: linkwarden
    restart: always
    environment:
      - AUTOSCROLL_TIMEOUT=${LINKWARDEN_AUTOSCROLL-30}
      - DATABASE_URL=postgres://${LINKWARDEN_DATABASE_USER}:${LINKWARDEN_DATABASE_PASSWD}@linkwarden-postgres:5432/${LINKWARDEN_DATABASE_NAME-linkwarden}
      - NEXTAUTH_URL=http://linkwarden.${NETWORK_DOMAIN-bricksandblocks.net}:3000/api/v1/auth
      - NEXTAUTH_SECRET=${LINKWARDEN_SECRET}
      - NEXT_PUBLIC_DISABLE_REGISTRATION=${LINKWARDEN_DISABLE_REGISTRATION-true} # Note: set false to enable signups
      - PAGINATION_TAKE_COUNT=${LINKWARDEN_PAGINATION_COUNT-50}
      - RE_ARCHIVE_LIMIT=${LINKWARDEN_ARCHIVE_LIMIT-5}
      - STORAGE_FOLDER=${LINKWARDEN_STORAGE-/data}
    ports:
      - "3080:3000"
    volumes:
      - linkwarden-data:/data/data
    extends:
      file: ${ROOT_DIR-..}/lib/logging.yml
      service: logging-loki
    depends_on:
      linkwarden-postgres:
        condition: service_healthy

  linkwarden-postgres:
    image: postgres:16-alpine
    container_name: linkwarden-postgres
    restart: always
    environment:
      - POSTGRES_USER=${LINKWARDEN_DATABASE_USER}
      - POSTGRES_PASSWORD=${LINKWARDEN_DATABASE_PASSWD}
      - POSTGRES_DB=${LINKWARDEN_DATABASE_NAME-linkwarden}
    volumes:
      - linkwarden-postgres-data:/var/lib/postgresql/data
    extends:
      file: ${ROOT_DIR-..}/lib/logging.yml
      service: logging-loki
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  linkwarden-data:
    driver: local
    driver_opts:
      type: nfs
      o: "addr=${DATA_HOST},nolock,soft,rw"
      device: ":/volume1/Docker/linkwarden"

  linkwarden-postgres-data:
    driver: local
    driver_opts:
      type: nfs
      o: "addr=${DATA_HOST},nolock,soft,rw"
      device: ":/volume1/Docker/linkwarden-postgres"