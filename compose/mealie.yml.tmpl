services:
  mealie:
    image: ghcr.io/mealie-recipes/mealie:latest
    container_name: mealie
    restart: always
    ports:
        - "9925:9000" # 
    deploy:
      resources:
        limits:
          memory: 1000M # 
    volumes:
      - ${DATA_PREFIX}/mealie:/app/data/
    environment:
      # Set Backend ENV Variables Here
      ALLOW_SIGNUP: false
      #LOG_LEVEL: debug
      PUID: 1000
      PGID: 1000
      TZ: America/Los_Angeles
      MAX_WORKERS: 1
      WEB_CONCURRENCY: 1
      BASE_URL: https://mealie.${NETWORK_DOMAIN}
      # Database Settings
      DB_ENGINE: postgres
      PG_USER: ${MEALIE_PG_USER}
      POSTGRES_USER: ${MEALIE_PG_USER}
      POSTGRES_PASSWORD: ${MEALIE_PG_PASSWORD}
      POSTGRES_SERVER: mealie-postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: mealie
    depends_on:
      mealie-postgres:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mealie.rule=Host(`mealie.${NETWORK_DOMAIN}`)"
      - "traefik.http.routers.mealie.entrypoints=websecure"
      - "traefik.http.routers.mealie.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mealie.service=mealie"
      - "traefik.http.services.mealie.loadbalancer.server.port=9000"
      - "traefik.http.services.mealie.loadbalancer.server.scheme=http"

  mealie-postgres:
    image: postgres:15
    container_name: mealie-postgres
    restart: always
    volumes:
      - ${DATA_PREFIX}/mealie-postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${MEALIE_PG_PASSWORD}
      POSTGRES_USER: ${MEALIE_PG_USER}
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 30s
      timeout: 20s
      retries: 3